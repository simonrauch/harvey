name: CI
on:
  pull_request:
    types:
    - opened
    - synchronize
    - reopened
jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Restore Cache
        uses: ./.github/actions/cache-restore
        id: cache-node-modules
      - name: Install node_modules
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: npm ci
  lint:
    name: Lint
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Restore Cache
        uses: ./.github/actions/cache-restore
      - name: Run Prettier
        run: npm run prettier
      - name: Run EsLint
        if: always()
        run: npm run eslint:ci
      - name: Annotate EsLint results
        uses: ataylorme/eslint-annotate-action@1.2.0
        if: ${{ github.actor != 'dependabot[bot]' }}
        with:
          repo-token: '${{ secrets.GITHUB_TOKEN }}'
          report-json: 'eslint-report.json'
  build:
    name: Build
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Restore Cache
        uses: ./.github/actions/cache-restore
        id: cache-node-modules
      - name: Run build
        run: npm run build
      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: build
  test:
    name: Test
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Restore Cache
        uses: ./.github/actions/cache-restore
        id: cache-node-modules
      - name: Run tests
        run: npm run test:ci
      - name: Report test results
        uses: dorny/test-reporter@v1
        if: ${{ github.actor != 'dependabot[bot]' }}
        with:
          name: Test results
          path: mocha-test-results.json
          reporter: mocha-json

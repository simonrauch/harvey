name: CD
on:
  push:
    tags: 
      - 'v*'
jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Restore Cache
        uses: ./.github/actions/cache-restore
        id: cache-node-modules
      - name: Install node_modules
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: npm ci
  lint:
    name: Lint
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Restore Cache
        uses: ./.github/actions/cache-restore
      - name: Run Prettier
        run: npm run prettier
      - name: Run EsLint
        run: npm run eslint
  build:
    name: Build
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Restore Cache
        uses: ./.github/actions/cache-restore
        id: cache-node-modules
      - name: Run build
        run: npm run build
      - name: Upload build artifact
        uses: actions/upload-artifact@v1
        with:
          name: build
          path: build
  test:
    name: Test
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Restore Cache
        uses: ./.github/actions/cache-restore
        id: cache-node-modules
      - name: Run tests
        run: npm test
  extract-version:
    name: Extract version 
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.extract-version.outputs.version }}
      version-without-v: ${{ steps.extract-version.outputs.version-without-v }}
    steps:
      - name: Extract version
        id: extract-version
        uses: battila7/get-version-action@v2
  npm-publish:
    name: Publish to NPM
    needs: [test, lint, build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Restore Cache
        uses: ./.github/actions/cache-restore
        id: cache-node-modules
      - name: Download build artifact
        uses: actions/download-artifact@v1
        with:
          name: build
          path: build
      - name: Publish 
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
  homebrew-publish:
    name: Publish to Homebrew
    needs: [extract-version, npm-publish]
    runs-on: ubuntu-latest
    steps:
      - name: Bump Homebrew formula
        uses: mislav/bump-homebrew-formula-action@v1
        with:
          formula-name: harvey
          formula-path: Formula/harvey.rb
          homebrew-tap: simonrauch/homebrew-tap
          base-branch: main
          download-url: https://registry.npmjs.org/@simonrauch/harvey/-/harvey-${{ needs.extract-version.outputs.version-without-v }}.tgz
          commit-message: |
            {{formulaName}} {{version}}
        env:
          COMMITTER_TOKEN: ${{ secrets.COMMITTER_TOKEN }}
  github-release:
    name: "Create GitHub release"
    needs: [test, lint, build]
    runs-on: "ubuntu-latest"
      - name: "Create Github release"
        uses: "marvinpinto/action-automatic-releases@v1"
        with:
          repo_token: "${{ secrets.COMMITTER_TOKEN }}"
          prerelease: false